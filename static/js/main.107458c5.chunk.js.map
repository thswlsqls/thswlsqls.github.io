{"version":3,"sources":["components/VendingMachine.jsx","App.js","reportWebVitals.js","index.js"],"names":["VendingMachine","useState","id","name","price","drinks","setDrinks","currentCoin","setcurrentCoin","map","coin","i","onClick","insertCoin","drink","onDoubleClick","window","confirm","alert","buy","drinkId","newDrinks","filter","handleDeleteClick","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mMA8EeA,G,eA5EQ,WAAO,IAAD,EACCC,mBAAS,CACnC,CAAEC,GAAI,EAAGC,KAAM,SAAKC,MAAO,KAC3B,CAAEF,GAAI,EAAGC,KAAM,eAAMC,MAAO,KAC5B,CAAEF,GAAI,EAAGC,KAAM,eAAMC,MAAO,OAJH,mBACpBC,EADoB,KACZC,EADY,OAaWL,mBAAS,GAbpB,mBAapBM,EAboB,KAaPC,EAbO,KAsC3B,OACE,gCACE,6DAAYD,KAlCF,CAAC,IAAK,IAAK,IAAM,KA+CpBE,KAAI,SAACC,EAAMC,GAAP,OACT,yBAAgBC,QAAS,kBA9BZ,SAACF,GAClBF,EAAeD,EAAcG,GA6BMG,CAAWH,IAA1C,UACGA,EADH,WAAaC,MAIf,uBACA,wBAAQC,QAhCE,kBAAMJ,EAAe,IAgC/B,kDAECH,EAAOI,KAAI,SAACK,EAAOH,GAAR,OACV,qBAEEI,cAAe,YApCX,SAACX,GACX,GAAKY,OAAOC,QAAQ,qDAChBV,EAAcH,EAAcc,MAAM,sDACtCV,EAAeD,EAAcH,GAkCrBe,CAAIL,EAAMV,QAHd,UAMGU,EAAMX,KACP,wBAAQS,QAAS,kBApCC,SAACQ,GACzB,IAAIC,EAAYhB,EAAOiB,QAAO,SAACR,EAAOZ,GAAR,OAAeY,EAAMZ,IAAMkB,KACzDd,EAAUe,GAkCmBE,CAAkBT,EAAMZ,KAA/C,4BANKS,WCxCAa,EAlBH,WACV,OACE,mCAWE,cAAC,EAAD,OCRSC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.107458c5.chunk.js","sourcesContent":["import { useState } from 'react';\r\n\r\nconst VendingMachine = () => {\r\n  const [drinks, setDrinks] = useState([\r\n    { id: 1, name: '물', price: 1000 },\r\n    { id: 2, name: '커피', price: 2000 },\r\n    { id: 3, name: '주스', price: 3000 },\r\n  ]);\r\n  const coins = [100, 500, 1000, 5000];\r\n  // var drinks = [\r\n  //   { id: 1, name: '물', price: 1000 },\r\n  //   { id: 2, name: '커피', price: 2000 },\r\n  //   { id: 3, name: '주스', price: 3000 },\r\n  // ];\r\n\r\n  const [currentCoin, setcurrentCoin] = useState(0);\r\n\r\n  const handleAddCoinBtnClick = (e) => {\r\n    let coin = parseInt(e.target.value);\r\n    setcurrentCoin(currentCoin + coin);\r\n  };\r\n\r\n  const handleGetChangeClick = (e) => {\r\n    setcurrentCoin(0);\r\n  };\r\n\r\n  const insertCoin = (coin) => {\r\n    setcurrentCoin(currentCoin + coin);\r\n  };\r\n  const reset = () => setcurrentCoin(0);\r\n  const buy = (price) => {\r\n    if (!window.confirm('구매하시겠습니까?')) return; // 브라우저에 있는 기능으로, alert ,confirm, propmpt 등을 사용할 수 있음\r\n    if (currentCoin < price) return alert('코인이 부족합니다.');\r\n    setcurrentCoin(currentCoin - price);\r\n  };\r\n  const handleDeleteClick = (drinkId) => {\r\n    let newDrinks = drinks.filter((drink, id) => drink.id != drinkId);\r\n    setDrinks(newDrinks);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>현재 코인: {currentCoin}</h2>\r\n      {/* <button onClick={handleAddCoinBtnClick} value='100'>\r\n        100\r\n      </button>\r\n      <button onClick={handleAddCoinBtnClick} value='500'>\r\n        500\r\n      </button>\r\n      <button onClick={handleAddCoinBtnClick} value='1000'>\r\n        1000\r\n      </button>\r\n      <button onClick={handleAddCoinBtnClick} value='5000'>\r\n        5000\r\n      </button> */}\r\n      {coins.map((coin, i) => (\r\n        <button key={i} onClick={() => insertCoin(coin)}>\r\n          {coin}원\r\n        </button>\r\n      ))}\r\n      <br />\r\n      <button onClick={reset}>거스름돈반환</button>\r\n      {/* <button onClick={handleGetChangeClick}>거스름돈반환</button> */}\r\n      {drinks.map((drink, i) => (\r\n        <li\r\n          key={i}\r\n          onDoubleClick={() => {\r\n            buy(drink.price);\r\n          }}\r\n        >\r\n          {drink.name}\r\n          <button onClick={() => handleDeleteClick(drink.id)}>삭제</button>\r\n        </li>\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VendingMachine;\r\n","import MyComponent from './components/MyComponent';\nimport Counter from './components/Counter';\nimport Say from './components/Say';\nimport EventPractice from './components/EventPractice';\nimport IterationSample from './components/IterationSample';\nimport VendingMachine from './components/VendingMachine';\n\nconst App = () => {\n  return (\n    <>\n      {/* <MyComponent name='react' name2='react2'>\n        <h1>안녕안녕</h1>\n      </MyComponent>\n      //열린 태그와 닫힌 태그 사이의 값을 children으로 전달할 수 있다. \n      <MyComponent name='vue' name2='angular' />\n      */}\n      {/* <Counter /> */}\n      {/* <Say /> */}\n      {/* <EventPractice /> */}\n      {/* <IterationSample /> */}\n      <VendingMachine />\n    </>\n  );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}